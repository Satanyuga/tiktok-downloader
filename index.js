const TelegramBot = require('node-telegram-bot-api');
const axios = require('axios');
const fs = require('fs');
const path = require('path');

// ‚úÖ —Ç–æ–∫–µ–Ω —Ç–µ–ø–µ—Ä—å –±–µ—Ä—ë—Ç—Å—è –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π —Å—Ä–µ–¥—ã
const TELEGRAM_TOKEN = process.env.TELEGRAM_TOKEN;

if (!TELEGRAM_TOKEN) {
  throw new Error('‚ùå TELEGRAM_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö —Å—Ä–µ–¥—ã.');
}

const bot = new TelegramBot(TELEGRAM_TOKEN, { polling: true });

bot.on('message', async (msg) => {
  const chatId = msg.chat.id;
  const url = msg.text.trim();

  if (!url.startsWith('http')) {
    return bot.sendMessage(chatId, '‚ö†Ô∏è –≠—Ç–æ –Ω–µ –ø–æ—Ö–æ–∂–µ –Ω–∞ TikTok —Å—Å—ã–ª–∫—É.');
  }

  try {
    const apiUrl = `https://tikwm.com/api/?url=${encodeURIComponent(url)}`;
    const { data } = await axios.get(apiUrl);

    const videoLink = data?.data?.play;
    if (!videoLink) {
      return bot.sendMessage(chatId, 'üö´ –í–∏–¥–µ–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.');
    }

    const filename = `video_${Date.now()}.mp4`;
    const videoPath = path.resolve(__dirname, filename);
    const videoStream = await axios.get(videoLink, { responseType: 'stream' });

    const writer = fs.createWriteStream(videoPath);
    videoStream.data.pipe(writer);

    writer.on('finish', async () => {
      await bot.sendVideo(chatId, videoPath, { caption: 'üé¨ –í–æ—Ç —Ç–≤–æ—ë –≤–∏–¥–µ–æ' });
      fs.unlinkSync(videoPath); // —É–¥–∞–ª—è–µ–º —Ñ–∞–π–ª –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏
    });

    writer.on('error', () => {
      bot.sendMessage(chatId, '‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Å–∏ –≤–∏–¥–µ–æ.');
    });
  } catch (err) {
    bot.sendMessage(chatId, 'üî• –û—à–∏–±–∫–∞: ' + err.message);
  }
});

// ‚õîÔ∏è Render fix: –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —Å–æ–æ–±—â–∞–µ–º "–≤—Å—ë –æ–∫"
(async () => {
  try {
    const me = await bot.getMe();
    console.log(`ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω: ${me.username}`);
    console.log('‚úÖ Bot is running and healthy for Render');
  } catch (err) {
    console.error('‚ùå getMe –Ω–µ —É–¥–∞–ª—Å—è, –Ω–æ –±–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç:', err.message);
  }

  // Render —Ç—Ä–µ–±—É–µ—Ç exit, –∏–Ω–∞—á–µ –¥—É–º–∞–µ—Ç, —á—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª–æ—Å—å
  process.exit(0);
})();
