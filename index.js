// üì¶ –ò–º–ø–æ—Ä—Ç –º–æ–¥—É–ª–µ–π
const express = require('express');
const TelegramBot = require('node-telegram-bot-api');
const axios = require('axios');
const fs = require('fs');
const path = require('path');

// üß† –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Express-—Å–µ—Ä–≤–µ—Ä–∞ –¥–ª—è Render
const app = express();
const PORT = process.env.PORT || 3000;
app.get('/', (req, res) => res.send('ü§ñ Bot is alive'));
app.listen(PORT, () => console.log(`üß† Express —Å–ª—É—à–∞–µ—Ç –ø–æ—Ä—Ç ${PORT}`));

// üîê –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ ENV-–ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π
const TELEGRAM_TOKEN = process.env.TELEGRAM_TOKEN;
if (!TELEGRAM_TOKEN) throw new Error('‚ùå TELEGRAM_TOKEN –Ω–µ —É–∫–∞–∑–∞–Ω.');

// üöÄ –°–æ–∑–¥–∞—ë–º Telegram-–±–æ—Ç–∞
const bot = new TelegramBot(TELEGRAM_TOKEN, { polling: true });

// üì¶ –û—á–µ—Ä–µ–¥—å —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –ø–æ–æ—á–µ—Ä—ë–¥–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏
const queue = [];
let isProcessing = false;

// üì• –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Ö–æ–¥—è—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
bot.on('message', (msg) => {
  const chatId = msg.chat.id;
  const url = msg.text?.trim();

  // ‚ö†Ô∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏ —Å—Å—ã–ª–∫–∏
  if (!url?.startsWith('http') || !url.includes('tiktok')) {
    return bot.sendMessage(chatId, '‚ö†Ô∏è –≠—Ç–æ –Ω–µ TikTok-—Å—Å—ã–ª–∫–∞. –ü—Ä–∏—à–ª–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é.');
  }

  // üì§ –î–æ–±–∞–≤–ª—è–µ–º –≤ –æ—á–µ—Ä–µ–¥—å –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
  queue.push({ chatId, url });
  if (!isProcessing) processQueue();
});

// üîÑ –û—Å–Ω–æ–≤–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—á–µ—Ä–µ–¥–∏
async function processQueue() {
  isProcessing = true;

  while (queue.length > 0) {
    const { chatId, url } = queue.shift();

    try {
      // üîç –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —á–µ—Ä–µ–∑ API tikwm
      const { data } = await axios.get(`https://tikwm.com/api/?url=${encodeURIComponent(url)}`);
      const info = data?.data;
      const videoLink = info?.play;
      const images = info?.images;

      // üñºÔ∏è –ï—Å–ª–∏ —ç—Ç–æ –∫–∞—Ä—É—Å–µ–ª—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
      if (Array.isArray(images) && images.length > 0) {
        await bot.sendMessage(chatId, `üñºÔ∏è –ù–∞–π–¥–µ–Ω–∞ –≥–∞–ª–µ—Ä–µ—è: ${images.length} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π`);

        for (let i = 0; i < images.length; i++) {
          const imgUrl = images[i];
          const filename = `img_${Date.now()}_${i}.jpg`;
          const imgPath = path.resolve(__dirname, filename);

          const stream = await axios.get(imgUrl, { responseType: 'stream' });
          const writer = fs.createWriteStream(imgPath);
          stream.data.pipe(writer);

          await new Promise((res, rej) => {
            writer.on('finish', res);
            writer.on('error', rej);
          });

          await bot.sendPhoto(chatId, imgPath);
          fs.unlinkSync(imgPath);
        }

      // üé¨ –ï—Å–ª–∏ —ç—Ç–æ –æ–±—ã—á–Ω–æ–µ –≤–∏–¥–µ–æ
      } else if (videoLink) {
        const filename = `video_${Date.now()}.mp4`;
        const videoPath = path.resolve(__dirname, filename);

        const stream = await axios.get(videoLink, { responseType: 'stream' });
        const writer = fs.createWriteStream(videoPath);
        stream.data.pipe(writer);

        await new Promise((res, rej) => {
          writer.on('finish', res);
          writer.on('error', rej);
        });

        await bot.sendVideo(chatId, videoPath, { caption: 'üé¨ –í–æ—Ç —Ç–≤–æ—ë –≤–∏–¥–µ–æ –∏–∑ TikTok' });
        fs.unlinkSync(videoPath);

      // üì≠ –ö–æ–Ω—Ç–µ–Ω—Ç –Ω–µ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω
      } else {
        await bot.sendMessage(chatId, 'üì≠ –ö–æ–Ω—Ç–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω.');
      }
    } catch (err) {
      await bot.sendMessage(chatId, `üî• –û—à–∏–±–∫–∞: ${err.message}`);
    }

    // ‚è±Ô∏è –ó–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏
    await new Promise(r => setTimeout(r, 2000));
  }

  isProcessing = false;
}

// üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ Telegram –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
(async () => {
  try {
    const me = await bot.getMe();
    console.log(`ü§ñ –ë–æ—Ç –∞–∫—Ç–∏–≤–µ–Ω: @${me.username}`);
  } catch (err) {
    console.error('‚ùå –û—à–∏–±–∫–∞ getMe:', err.message);
  }
})();

// üí§ –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –ø—Ä–æ—Ü–µ—Å—Å–∞ –ø—Ä–∏ SIGINT/SIGTERM
process.once('SIGINT', () => {
  console.log('üß® SIGINT. –ó–∞–≤–µ—Ä—à–∞–µ–º...');
  process.exit(0);
});
process.once('SIGTERM', () => {
  console.log('üî™ SIGTERM. –£–Ω–∏—á—Ç–æ–∂–µ–Ω–∏–µ...');
  process.exit(0);
});
