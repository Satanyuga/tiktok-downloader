const express = require('express');
const TelegramBot = require('node-telegram-bot-api');
const axios = require('axios');
const fs = require('fs');
const path = require('path');

const app = express();
const PORT = process.env.PORT || 3000;

// ‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø—É–±–ª–∏—á–Ω—ã–π Render-–∞–¥—Ä–µ—Å:
const RENDER_URL = 'https://tiktokbot-1100.onrender.com';

app.get('/', (req, res) => res.send('ü§ñ Bot is alive'));
app.listen(PORT, () => console.log(`üß† Express —Å–ª—É—à–∞–µ—Ç –ø–æ—Ä—Ç ${PORT}`));

const TELEGRAM_TOKEN = process.env.TELEGRAM_TOKEN;
if (!TELEGRAM_TOKEN) throw new Error('‚ùå TELEGRAM_TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.');

const bot = new TelegramBot(TELEGRAM_TOKEN, { polling: true });

const queue = [];
let isProcessing = false;

// üì• –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç Telegram
bot.on('message', async (msg) => {
  const chatId = msg.chat.id;
  const url = msg.text?.trim();
  if (!url?.startsWith('http') || !url.includes('tiktok')) {
    return bot.sendMessage(chatId, '‚ö†Ô∏è –≠—Ç–æ –Ω–µ –ø–æ—Ö–æ–∂–µ –Ω–∞ TikTok —Å—Å—ã–ª–∫—É. –ü—Ä–∏—à–ª–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é.');
  }

  queue.push({ chatId, url });
  if (!isProcessing) processQueue();
});

async function processQueue() {
  isProcessing = true;
  while (queue.length > 0) {
    const { chatId, url } = queue.shift();
    try {
      const { data } = await axios.get(`https://tikwm.com/api/?url=${encodeURIComponent(url)}`);
      const videoLink = data?.data?.play;
      if (!videoLink) {
        chatId !== 'internal_ping'
          ? await bot.sendMessage(chatId, 'üö´ –í–∏–¥–µ–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.')
          : console.log('üö´ –í–∏–¥–µ–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ (–∞–Ω—Ç–∏-—Å–æ–Ω)');
        continue;
      }

      const filename = `video_${Date.now()}.mp4`;
      const videoPath = path.resolve(__dirname, filename);
      const stream = await axios.get(videoLink, { responseType: 'stream' });
      const writer = fs.createWriteStream(videoPath);
      stream.data.pipe(writer);

      await new Promise((res, rej) => {
        writer.on('finish', res);
        writer.on('error', rej);
      });

      chatId !== 'internal_ping'
        ? await bot.sendVideo(chatId, videoPath, { caption: 'üé¨ –í–æ—Ç —Ç–≤–æ—ë –≤–∏–¥–µ–æ' })
        : console.log(`‚úÖ –í–∏–¥–µ–æ —Å–∫–∞—á–∞–Ω–æ: ${filename}`);

      fs.unlinkSync(videoPath);
    } catch (err) {
      chatId !== 'internal_ping'
        ? await bot.sendMessage(chatId, `üî• –û—à–∏–±–∫–∞: ${err.message}`)
        : console.error('üî• –û—à–∏–±–∫–∞ –∞–Ω—Ç–∏-—Å–Ω–∞:', err.message);
    }
    await new Promise((r) => setTimeout(r, 2000));
  }
  isProcessing = false;
}

// üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ Telegram-–ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
(async () => {
  try {
    const me = await bot.getMe();
    console.log(`ü§ñ –ë–æ—Ç –∞–∫—Ç–∏–≤–µ–Ω: @${me.username}`);
  } catch (err) {
    console.error('‚ùå –û—à–∏–±–∫–∞ getMe:', err.message);
  }
})();

// üí§ –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∏–≥–Ω–∞–ª–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
process.once('SIGINT', () => {
  console.log('üß® SIGINT. –ó–∞–≤–µ—Ä—à–∞–µ–º...');
  process.exit(0);
});
process.once('SIGTERM', () => {
  console.log('üî™ SIGTERM. –£–Ω–∏—á—Ç–æ–∂–µ–Ω–∏–µ...');
  process.exit(0);
});

// üåê –ü–∏–Ω–≥ –≤–Ω–µ—à–Ω–µ–≥–æ Render-–∞–¥—Ä–µ—Å–∞ –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç
setInterval(() => {
  axios.get(RENDER_URL + '/')
    .then(() => console.log('üì° –í–Ω–µ—à–Ω–∏–π –ø–∏–Ω–≥ –ø—Ä–æ—à—ë–ª. Render –ø—Ä–æ—Å–Ω—É–ª—Å—è.'))
    .catch((e) => console.error('‚ö†Ô∏è –°–±–æ–π –≤–Ω–µ—à–Ω–µ–≥–æ –ø–∏–Ω–≥–∞:', e.message));
}, 5 * 60 * 1000);

// ‚è∞ TikTok-–∑–∞–ø—Ä–æ—Å –¥–ª—è –∞–Ω—Ç–∏-—Å–Ω–∞ –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç
setInterval(() => {
  queue.push({
    chatId: 'internal_ping',
    url: 'https://www.tiktok.com/@bellapoarch/video/7338180453062479134?is_from_webapp=1&sender_device=pc'
  });
  console.log('üì• –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∑–∞–ø—Ä–æ—Å –Ω–∞ TikTok –¥–æ–±–∞–≤–ª–µ–Ω');

  if (!isProcessing) processQueue();
}, 5 * 60 * 1000);
