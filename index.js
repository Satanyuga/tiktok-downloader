// üì¶ –ò–º–ø–æ—Ä—Ç –º–æ–¥—É–ª–µ–π
const express = require('express');
const TelegramBot = require('node-telegram-bot-api');
const axios = require('axios');
const fs = require('fs'); // –û—Å—Ç–∞–≤–ª—è–µ–º –Ω–∞ —Å–ª—É—á–∞–π, –µ—Å–ª–∏ —á—Ç–æ-—Ç–æ –ø–æ–π–¥—ë—Ç –Ω–µ —Ç–∞–∫, –Ω–æ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º
const path = require('path');

// üîß Express —Å–µ—Ä–≤–µ—Ä –¥–ª—è Render
const app = express();
const PORT = process.env.PORT || 3000;
const URL = 'https://' + process.env.RENDER_EXTERNAL_HOSTNAME;

app.use(express.json()); // –û–±—Ä–∞–±–æ—Ç–∫–∞ JSON-—Ç–µ–ª–∞ –æ—Ç Telegram

app.get('/', (req, res) => res.send('ü§ñ Bot is alive'));
app.get('/ping', (req, res) => res.send('‚úÖ Ping OK'));
app.listen(PORT, () => console.log(`üß† Express —Å–ª—É—à–∞–µ—Ç –ø–æ—Ä—Ç ${PORT}`));

// üîê Telegram —Ç–æ–∫–µ–Ω –∏–∑ ENV
const TELEGRAM_TOKEN = process.env.TELEGRAM_TOKEN;
if (!TELEGRAM_TOKEN) throw new Error('‚ùå TELEGRAM_TOKEN –Ω–µ —É–∫–∞–∑–∞–Ω.');

// ‚öôÔ∏è –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Webhook
const bot = new TelegramBot(TELEGRAM_TOKEN);
bot.setWebHook(`${URL}/bot${TELEGRAM_TOKEN}`);

// üì¶ –û—á–µ—Ä–µ–¥—å —Å–æ–æ–±—â–µ–Ω–∏–π
const queue = [];
let isProcessing = false;

// ‚è∞ –ü–∏–Ω–≥ —Å–∞–º–æ–≥–æ —Å–µ–±—è –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç + –ª–æ–≥
setInterval(() => {
  axios.get(`${URL}/ping`)
    .then(() => console.log(`[${new Date().toLocaleTimeString()}] üîÑ –Ø –Ω–µ —Å–ø–ª—é. –ü–∏–Ω–≥–∞–Ω—É–ª Render.`))
    .catch(() => console.log(`[${new Date().toLocaleTimeString()}] ‚ö†Ô∏è –ü–∏–Ω–≥ –Ω–µ –ø—Ä–æ—à—ë–ª.`));
}, 300000);

// üì• –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Ö–æ–¥—è—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç Webhook
app.post(`/bot${TELEGRAM_TOKEN}`, (req, res) => {
  bot.processUpdate(req.body);
  res.sendStatus(200); // –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –æ—Ç–≤–µ—á–∞–µ–º, —á—Ç–æ–±—ã Telegram –Ω–µ —Å–ø–∞–º–∏–ª
});

bot.on('message', (msg) => {
  const chatId = msg.chat.id;
  const url = msg.text?.trim();

  // ‚ö†Ô∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ ‚Äî —Ç–æ–ª—å–∫–æ TikTok —Å—Å—ã–ª–∫–∏
  if (!url?.startsWith('http') || !url.includes('tiktok')) {
    return bot.sendMessage(chatId, '‚ö†Ô∏è –≠—Ç–æ –Ω–µ TikTok-—Å—Å—ã–ª–∫–∞. –ü—Ä–∏—à–ª–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é.');
  }

  // üì• –î–æ–±–∞–≤–ª—è–µ–º –≤ –æ—á–µ—Ä–µ–¥—å
  queue.push({ chatId, url });
  if (!isProcessing) processQueue();
});

// üîß –û—Å–Ω–æ–≤–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—á–µ—Ä–µ–¥–∏
async function processQueue() {
  isProcessing = true;

  while (queue.length > 0) {
    const { chatId, url } = queue.shift();

    try {
      await bot.sendMessage(chatId, 'üîé –ò—â—É —Ç–≤–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç...');
      // üé¨ –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å tikwm
      const { data } = await axios.get(`https://tikwm.com/api/?url=${encodeURIComponent(url)}`);
      const info = data?.data;
      const videoLink = info?.play;
      const images = info?.images;

      // üñºÔ∏è –ö–∞—Ä—É—Å–µ–ª—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
      if (Array.isArray(images) && images.length > 0) {
        await bot.sendMessage(chatId, `üñºÔ∏è –ù–∞–π–¥–µ–Ω–∞ –≥–∞–ª–µ—Ä–µ—è: ${images.length} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π`);

        for (let i = 0; i < images.length; i++) {
          const imgUrl = images[i];
          const stream = await axios.get(imgUrl, { responseType: 'stream' });
          await bot.sendPhoto(chatId, stream.data);
        }

      // üé• –û–±—ã—á–Ω–æ–µ –≤–∏–¥–µ–æ
      } else if (videoLink) {
        const stream = await axios.get(videoLink, { responseType: 'stream' });
        await bot.sendVideo(chatId, stream.data, { caption: 'üé¨ –í–æ—Ç —Ç–≤–æ—ë –≤–∏–¥–µ–æ –∏–∑ TikTok' });

      } else {
        // ‚ùå –ö–æ–Ω—Ç–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω
        await bot.sendMessage(chatId, 'üì≠ –ö–æ–Ω—Ç–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω.');
      }

    } catch (err) {
      // üî• –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
      console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ: ${err.message}`);
      await bot.sendMessage(chatId, `üî• –û—à–∏–±–∫–∞: ${err.message}`);
    }

    // ‚è±Ô∏è –ó–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
    await new Promise(r => setTimeout(r, 2000));
  }

  isProcessing = false;
}

// üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ Telegram –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
(async () => {
  try {
    const me = await bot.getMe();
    console.log(`ü§ñ –ë–æ—Ç –∞–∫—Ç–∏–≤–µ–Ω: @${me.username}`);
  } catch (err) {
    console.error('‚ùå –û—à–∏–±–∫–∞ getMe:', err.message);
  }
})();

// üí§ –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –ø—Ä–∏ SIGINT/SIGTERM
process.once('SIGINT', () => {
  console.log('üß® SIGINT. –ó–∞–≤–µ—Ä—à–∞–µ–º...');
  process.exit(0);
});
process.once('SIGTERM', () => {
  console.log('üî™ SIGTERM. –£–Ω–∏—á—Ç–æ–∂–µ–Ω–∏–µ...');
  process.exit(0);
});
